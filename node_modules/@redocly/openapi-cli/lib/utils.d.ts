import { BundleOutputFormat, Config, LintConfig, NormalizedProblem } from '@redocly/openapi-core';
import { Totals } from './types';
export declare function getFallbackEntryPointsOrExit(argsEntrypoints: string[] | undefined, config: Config): Promise<string[]>;
export declare function getTotals(problems: (NormalizedProblem & {
    ignored?: boolean;
})[]): Totals;
export declare function getExecutionTime(startedAt: number): string;
export declare function printExecutionTime(commandName: string, startedAt: number, entrypoint: string): void;
export declare function pathToFilename(path: string): string;
export declare class CircularJSONNotSupportedError extends Error {
    originalError: Error;
    constructor(originalError: Error);
}
export declare function dumpBundle(obj: any, format: BundleOutputFormat, dereference?: boolean): string;
export declare function saveBundle(filename: string, output: string): void;
export declare function promptUser(query: string): Promise<string>;
export declare function readYaml(filename: string): string | object | undefined;
export declare function writeYaml(data: any, filename: string, noRefs?: boolean): void;
export declare function pluralize(label: string, num: number): string;
export declare function handleError(e: Error, ref: string): void;
export declare function printLintTotals(totals: Totals, definitionsCount: number): void;
export declare function getOutputFileName(entrypoint: string, entries: number, output?: string, ext?: BundleOutputFormat): {
    outputFile: string;
    ext: BundleOutputFormat;
};
export declare function printUnusedWarnings(config: LintConfig): void;
export declare function exitWithError(message: string): void;
/**
 * Convert Windows backslash paths to slash paths: foo\\bar âž” foo/bar
 */
export declare function slash(path: string): string;
