import { BaseResolver, Document } from './resolve';
import { Oas3Rule, Oas3Preprocessor, Oas2Rule, Oas2Preprocessor } from './visitors';
import { NodeType } from './types';
import { LintConfig, Config } from './config/config';
export declare enum OasVersion {
    Version2 = "oas2",
    Version3_0 = "oas3_0"
}
export declare enum OasMajorVersion {
    Version2 = "oas2",
    Version3 = "oas3"
}
export declare type RuleSet<T> = Record<string, T>;
export declare type Oas3RuleSet = Record<string, Oas3Rule>;
export declare type Oas2RuleSet = Record<string, Oas2Rule>;
export declare type Oas3PreprocessorsSet = Record<string, Oas3Preprocessor>;
export declare type Oas2PreprocessorsSet = Record<string, Oas2Preprocessor>;
export declare type Oas3DecoratorsSet = Record<string, Oas3Preprocessor>;
export declare type Oas2DecoratorsSet = Record<string, Oas2Preprocessor>;
export declare function lint(opts: {
    ref: string;
    config: Config;
    externalRefResolver?: BaseResolver;
}): Promise<import("./walk").NormalizedProblem[]>;
export declare function lintDocument(opts: {
    document: Document;
    config: LintConfig;
    customTypes?: Record<string, NodeType>;
    externalRefResolver: BaseResolver;
}): Promise<import("./walk").NormalizedProblem[]>;
export declare function detectOpenAPI(root: any): OasVersion;
export declare function openAPIMajor(version: OasVersion): OasMajorVersion;
